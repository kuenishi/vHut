<?xml version="1.0" encoding="utf-8"?>

<!--

    ADOBE SYSTEMS INCORPORATED
    Copyright 2008 Adobe Systems Incorporated
    All Rights Reserved.

    NOTICE: Adobe permits you to use, modify, and distribute this file
    in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for a Spark TitleWindow container.

     @see spark.skins.spark.TitleWindowCloseButtonSkin
     @see spark.components.TitleWindow

     @langversion 3.0
     @playerversion Flash 10
     @playerversion AIR 1.5
     @productversion Flex 4
-->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
    xmlns:fb="http://ns.adobe.com/flashbuilder/2009" blendMode="normal" mouseEnabled="false"
    minWidth="76" minHeight="76" alpha.disabled="0.5" alpha.disabledWithControlBar="0.5" xmlns:primitives="jp.co.ntts.vhut.primitives.*">
    <fx:Metadata>[HostComponent("jp.co.ntts.vhut.comp.wiz.presentation.Wizard")]</fx:Metadata>

    <fx:Script fb:purpose="styling">
        /* Define the skin elements that should not be colorized.
        For panel, border and title background are skinned, but the content area and title text are not. */
        static private const exclusions:Array = ["background", "titleDisplay", "contentGroup"];

        /**
         * @private
         */
        override public function get colorizeExclusions():Array {return exclusions;}

        /**
         * @private
         */
        override protected function initializationComplete():void
        {
            useChromeColor = true;
            super.initializationComplete();
        }

        /**
         * @private
         */
        override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
        {
            dropShadow.visible = getStyle("dropShadowVisible");

            super.updateDisplayList(unscaledWidth, unscaledHeight);
        }
    </fx:Script>



    <s:states>
        <s:State name="normal" />
        <s:State name="inactive" stateGroups="inactiveGroup" />
        <s:State name="disabled" />
        <s:State name="normalWithControlBar" stateGroups="withControls" />
        <s:State name="inactiveWithControlBar" stateGroups="withControls, inactiveGroup" />
        <s:State name="disabledWithControlBar" stateGroups="withControls" />
    </s:states>

	<fx:Declarations>
		<s:SolidColor id="contentBackgroundFill" color="#FFFFFF"/>
		<fx:Array id="contentBackgroundFilter">
			<s:DropShadowFilter blurX="5" blurY="0" distance="0" alpha="0.5"/>
		</fx:Array>
	</fx:Declarations>

    <!--- drop shadow can't be hittable so it stays sibling of other graphics @private-->
    <s:RectangularDropShadow id="dropShadow" blurX="20" blurY="20" alpha="0.32"
                             alpha.inactiveGroup="0.22" distance="11"  distance.inactiveGroup="7"
                             angle="90" color="0x000000" left="0" top="0" right="0" bottom="0"/>

    <!--- drop shadow can't be hittable so all other graphics go in this group -->
    <s:Group left="0" right="0" top="0" bottom="0">

        <!--- top group mask @private-->
        <s:Group left="0" top="0" right="0" bottom="0" id="topGroupMask">
            <!--- @private-->
            <s:Rect id="topMaskRect" left="0" top="0" right="0" bottom="0">
                <s:fill>
                    <s:SolidColor alpha="0"/>
                </s:fill>
            </s:Rect>
        </s:Group>

        <!--- bottom group mask @private-->
        <s:Group left="0" top="0" right="0" bottom="0" id="bottomGroupMask"
                 includeIn="withControls">
            <!--- @private-->
            <s:Rect id="bottomMaskRect" left="0" top="0" right="0" bottom="0">
                <s:fill>
                    <s:SolidColor alpha="0"/>
                </s:fill>
            </s:Rect>
        </s:Group>

        <!-- layer 3: contents -->
        <!--- Contains the vertical stack of title bar content and control bar. -->
        <s:Group left="0" right="0" top="0" bottom="0" id="contents">
            <s:layout>
                <s:VerticalLayout gap="0" horizontalAlign="justify" />
            </s:layout>
            <!--- @private -->
            <s:Group id="topGroup" mask="{topGroupMask}">

                <!--- layer 0: title bar fill @private -->
                <s:Rect id="tbFill" left="0" right="0" top="0" bottom="0">
                    <s:fill>
                        <primitives:MenuBarGradient rotation="90" flatRate="0.2"/>
                    </s:fill>
                </s:Rect>

                <!-- layer 3: text -->
                <!--- @copy spark.components.Panel#titleDisplay -->
                <s:Label id="titleDisplay" maxDisplayedLines="1"
                         left="9" right="36" top="0" bottom="0" minHeight="30"
                         verticalAlign="middle" textAlign="center" fontWeight="bold"
						 fontSize="16"/>

                <!-- layer 4: moveArea -->
                <!--- @copy spark.components.TitleWindow#moveArea -->
				<!--<s:Group id="moveArea" left="0" right="0" top="0" bottom="0"/>-->

                <!--- @copy spark.components.TitleWindow#closeButton -->
                <s:Button id="closeButton" skinClass="spark.skins.spark.TitleWindowCloseButtonSkin"
                          width="15" height="15" right="7" top="7" />
            </s:Group>

            <!--
                Note: setting the minimum size to 0 here so that changes to the host component's
                size will not be thwarted by this skin part's minimum size.   This is a compromise,
                more about it here: http://bugs.adobe.com/jira/browse/SDK-21143
            -->
            <!--- @copy spark.components.SkinnableContainer#contentGroup -->
			<s:Group width="100%" height="100%" minWidth="0" minHeight="0">
				<s:Group id="contentGroup" top="0" bottom="0" right="15" left="15" minWidth="0" minHeight="0"/>
				<primitives:Bevel top="0" bottom="0" left="0" right="0" minWidth="0" minHeight="0"/>
				<s:Rect top="0" bottom="0" left="0" right="0" minWidth="0" minHeight="0">
					<s:fill>
						<primitives:GlassGradient/>
					</s:fill>
				</s:Rect>
			</s:Group>

            <!--- @private -->
            <s:Group id="bottomGroup" minWidth="0" minHeight="0"
                     includeIn="withControls">

                <s:Group left="0" right="0" top="0" bottom="0" mask="{bottomGroupMask}">

                    <!-- layer 2: control bar fill -->
                    <s:Rect left="0" right="0" top="0" bottom="0">
						<s:fill>
							<primitives:MenuBarGradient rotation="90" flatRate="0.2"/>
						</s:fill>
                    </s:Rect>
                </s:Group>

                <!--- @copy spark.components.Panel#controlBarGroup -->
                <s:Group id="controlBarGroup" left="0" right="0" top="0" bottom="0" minWidth="0" minHeight="0">
                    <s:layout>
                        <s:HorizontalLayout paddingLeft="10" paddingRight="10" paddingTop="7" paddingBottom="7" gap="10"
											verticalAlign="middle"/>
                    </s:layout>
				</s:Group>
            </s:Group>
        </s:Group>
    </s:Group>
</s:SparkSkin>
