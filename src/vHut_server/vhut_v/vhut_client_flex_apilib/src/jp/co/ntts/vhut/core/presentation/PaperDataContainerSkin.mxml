<?xml version="1.0" encoding="utf-8"?>

<!--

    ADOBE SYSTEMS INCORPORATED
    Copyright 2008 Adobe Systems Incorporated
    All Rights Reserved.

    NOTICE: Adobe permits you to use, modify, and distribute this file
    in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for the Spark SkinnableDataContainer container.  

     @see spark.components.SkinnableDataContainer
        
      @langversion 3.0
      @playerversion Flash 10
      @playerversion AIR 1.5
      @productversion Flex 4
-->
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:fb="http://ns.adobe.com/flashbuilder/2009">

    <fx:Metadata>
    <![CDATA[ 
        /** 
         * @copy spark.skins.spark.ApplicationSkin#hostComponent
         */
        [HostComponent("spark.components.SkinnableDataContainer")]
    ]]>
	</fx:Metadata>
	
	<fx:Script fb:purpose="styling">
		<![CDATA[         
			/**
			 *  @private
			 */
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number) : void
			{
				// Push backgroundColor and backgroundAlpha directly.
				// Handle undefined backgroundColor by hiding the background object.
				if (isNaN(getStyle("backgroundColor")))
				{
					background.visible = false;
				}
				else
				{
					background.visible = true;
					bgFill.color = getStyle("backgroundColor");
					bgFill.alpha = getStyle("backgroundAlpha");
				}
				
				super.updateDisplayList(unscaledWidth, unscaledHeight);
			}
		]]>        
	</fx:Script>
 
    
    <s:states>
        <s:State name="normal" />
        <s:State name="disabled" />
    </s:states>
	
	<fx:Declarations>
		<fx:Array id="contentBackgroundFilter">
			<s:DropShadowFilter blurX="5" blurY="5" distance="0" alpha="0.5"/>
		</fx:Array>
	</fx:Declarations>
	
	<s:Rect id="background" left="0" right="0" top="0" bottom="0"
			filters="{ contentBackgroundFilter }">
		<s:fill>
			<!--- @private -->
			<s:SolidColor id="bgFill" color="#FFFFFF"/>
		</s:fill>
	</s:Rect>
    
    <!--
      Note: setting the minimum size to 0 here so that changes to the host component's
      size will not be thwarted by this skin part's minimum size.   This is a compromise,
      more about it here: http://bugs.adobe.com/jira/browse/SDK-21143
    -->
    <!--- @copy spark.components.SkinnableDataContainer#dataGroup -->
    <s:DataGroup id="dataGroup" left="0" right="0" top="0" bottom="0" minWidth="0" minHeight="0">
        <s:layout>
            <s:VerticalLayout horizontalAlign="contentJustify" />
        </s:layout>
    </s:DataGroup>

</s:Skin>
