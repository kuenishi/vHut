/*
* Copyright 2011 NTT Software Corporation.
* All Rights Reserved.
*/
/**
 * Generated by Gas3 v2.1.0 (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERWRITTEN EACH TIME YOU USE
 * THE GENERATOR.
 */

package jp.co.ntts.vhut.entity {

    import jp.co.ntts.vhut.util.Enum;

    [Bindable]
    [RemoteClass(alias="jp.co.ntts.vhut.entity.CommandOperation")]
	/**
	 * CommandOperation Enum Class.
	 *
	 * <p>
	 * <b>Author :</b> NTT Software Corporation.
	 * <b>Version :</b> 1.0.0
	 * </p>
	 *
	 * @langversion 3.0
	 * @playerversion Flash 10.1
	 *
	 * @internal
	 * $Date: 2011-11-28 19:50:40 +0900 (æœˆ, 28 11 2011) $
	 * $Revision: 949 $
	 * $Author: NTT Software Corporation. $
	 */
    public class CommandOperation extends Enum {

        public static const GET_ALL_CLUSTERS:CommandOperation = new CommandOperation("GET_ALL_CLUSTERS", _);
        public static const GET_HOSTS_BY_CLUSTER_ID:CommandOperation = new CommandOperation("GET_HOSTS_BY_CLUSTER_ID", _);
        public static const GET_NETWORKS_BY_CLUSTER_ID:CommandOperation = new CommandOperation("GET_NETWORKS_BY_CLUSTER_ID", _);
        public static const GET_ALL_DATA_STORAGES:CommandOperation = new CommandOperation("GET_ALL_DATA_STORAGES", _);
        public static const GET_VMS_BY_CLUSTER_ID:CommandOperation = new CommandOperation("GET_VMS_BY_CLUSTER_ID", _);
        public static const GET_TEMPLATES_BY_CLUSTER_ID:CommandOperation = new CommandOperation("GET_TEMPLATES_BY_CLUSTER_ID", _);
        public static const GET_ALL_USERS:CommandOperation = new CommandOperation("GET_ALL_USERS", _);
        public static const UPDATE_COMMAND_LIST:CommandOperation = new CommandOperation("UPDATE_COMMAND_LIST", _);
        public static const CREATE_VM_ASYNC:CommandOperation = new CommandOperation("CREATE_VM_ASYNC", _);
        public static const DELETE_VM_ASYNC:CommandOperation = new CommandOperation("DELETE_VM_ASYNC", _);
        public static const CHANGE_SPEC:CommandOperation = new CommandOperation("CHANGE_SPEC", _);
        public static const ADD_NETWORK_ADAPTER:CommandOperation = new CommandOperation("ADD_NETWORK_ADAPTER", _);
        public static const REMOVE_NETWORK_ADAPTER:CommandOperation = new CommandOperation("REMOVE_NETWORK_ADAPTER", _);
        public static const ADD_DISK_ASYNC:CommandOperation = new CommandOperation("ADD_DISK_ASYNC", _);
        public static const REMOVE_DISK_ASYNC:CommandOperation = new CommandOperation("REMOVE_DISK_ASYNC", _);
        public static const ADD_USER:CommandOperation = new CommandOperation("ADD_USER", _);
        public static const REMOVE_USER:CommandOperation = new CommandOperation("REMOVE_USER", _);
        public static const START_VM_ASYNC:CommandOperation = new CommandOperation("START_VM_ASYNC", _);
        public static const STOP_VM_ASYNC:CommandOperation = new CommandOperation("STOP_VM_ASYNC", _);
        public static const SHUTDOWN_VM_ASYNC:CommandOperation = new CommandOperation("SHUTDOWN_VM_ASYNC", _);
        public static const CREATE_TEMPLATE_ASYNC:CommandOperation = new CommandOperation("CREATE_TEMPLATE_ASYNC", _);
        public static const DELETE_TEMPLATE_ASYNC:CommandOperation = new CommandOperation("DELETE_TEMPLATE_ASYNC", _);
        public static const ADD_IP:CommandOperation = new CommandOperation("ADD_IP", _);
        public static const REMOVE_IP:CommandOperation = new CommandOperation("REMOVE_IP", _);
        public static const ADD_NAT:CommandOperation = new CommandOperation("ADD_NAT", _);
        public static const REMOVE_NAT:CommandOperation = new CommandOperation("REMOVE_NAT", _);
        public static const GET_NW_AGENT_CONFIG:CommandOperation = new CommandOperation("GET_NW_AGENT_CONFIG", _);
        public static const START_VM_SYNC:CommandOperation = new CommandOperation("START_VM_SYNC", _);
        public static const STOP_VM_SYNC:CommandOperation = new CommandOperation("STOP_VM_SYNC", _);
        public static const SHUTDOWN_VM_SYNC:CommandOperation = new CommandOperation("SHUTDOWN_VM_SYNC", _);
        public static const CHANGE_USERS_PASSWORD:CommandOperation = new CommandOperation("CHANGE_USERS_PASSWORD", _);

        function CommandOperation(value:String = null, restrictor:* = null) {
            super((value || GET_ALL_CLUSTERS.name), restrictor);
        }

        override protected function getConstants():Array {
            return constants;
        }

        public static function get constants():Array {
            return [GET_ALL_CLUSTERS, GET_HOSTS_BY_CLUSTER_ID, GET_NETWORKS_BY_CLUSTER_ID, GET_ALL_DATA_STORAGES, GET_VMS_BY_CLUSTER_ID, GET_TEMPLATES_BY_CLUSTER_ID, GET_ALL_USERS, UPDATE_COMMAND_LIST, CREATE_VM_ASYNC, DELETE_VM_ASYNC, CHANGE_SPEC, ADD_NETWORK_ADAPTER, REMOVE_NETWORK_ADAPTER, ADD_DISK_ASYNC, REMOVE_DISK_ASYNC, ADD_USER, REMOVE_USER, START_VM_ASYNC, STOP_VM_ASYNC, SHUTDOWN_VM_ASYNC, CREATE_TEMPLATE_ASYNC, DELETE_TEMPLATE_ASYNC, ADD_IP, REMOVE_IP, ADD_NAT, REMOVE_NAT, GET_NW_AGENT_CONFIG, START_VM_SYNC, STOP_VM_SYNC, SHUTDOWN_VM_SYNC, CHANGE_USERS_PASSWORD];
        }

        public static function valueOf(name:String):CommandOperation {
            return CommandOperation(GET_ALL_CLUSTERS.constantOf(name));
        }
    }
}